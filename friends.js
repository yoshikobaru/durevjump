document.addEventListener('DOMContentLoaded', function() {
    const inviteButton = document.querySelector('img[alt="–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å"]');
    const friendsList = document.getElementById('friends-list');
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    async function getReferralLink() {
        try {
            const telegramId = window.Telegram.WebApp.initDataUnsafe.user.id;
            const response = await fetch(`/get-referral-link?telegramId=${telegramId}`);
            const data = await response.json();
            return data.inviteLink;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏:', error);
            return null;
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ Telegram
    async function handleShareLink() {
        const referralLink = await getReferralLink();
        if (referralLink) {
            const message = "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ DurovJump –≤–º–µ—Å—Ç–µ —Å–æ –º–Ω–æ–π! üéÆ";
            const shareUrl = `https://t.me/share/url?text=${encodeURIComponent(message)}&url=${encodeURIComponent(referralLink)}`;
            
            if (window.Telegram && window.Telegram.WebApp) {
                Telegram.WebApp.openTelegramLink(shareUrl);
            } else {
                window.open(shareUrl, "_blank");
            }
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π
    async function getReferredFriends() {
        try {
            const telegramId = window.Telegram.WebApp.initDataUnsafe.user.id;
            const response = await fetch(`/get-referred-friends?telegramId=${telegramId}`);
            const data = await response.json();
            return data.referredFriends;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π:', error);
            return [];
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π
    function displayFriends(friends) {
        friendsList.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫

        if (friends.length === 0) {
            friendsList.innerHTML = `
                <div class="bg-white rounded-lg p-4 text-center text-gray-500" 
                     style="font-family: 'Permanent Marker', cursive;">
                    –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π
                </div>`;
            return;
        }

        friends.forEach(friend => {
            const friendElement = document.createElement('div');
            friendElement.className = 'bg-white rounded-lg p-4 flex items-center justify-between';
            friendElement.innerHTML = `
                <div class="flex items-center">
                    <div class="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                        <span class="text-2xl">üë§</span>
                    </div>
                    <span class="ml-4 font-medium" style="font-family: 'Permanent Marker', cursive;">
                        ${friend.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                    </span>
                </div>
            `;
            friendsList.appendChild(friendElement);
        });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    if (inviteButton) {
        inviteButton.addEventListener('click', handleShareLink);
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    async function updateFriendsList() {
        const friends = await getReferredFriends();
        displayFriends(friends);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    updateFriendsList();
});